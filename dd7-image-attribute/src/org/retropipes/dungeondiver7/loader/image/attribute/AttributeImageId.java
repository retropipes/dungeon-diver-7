package org.retropipes.dungeondiver7.loader.image.attribute;

import java.net.URL;

import org.retropipes.diane.asset.image.DianeImageIndex;
import org.retropipes.dungeondiver7.locale.FileExtension;
import org.retropipes.dungeondiver7.locale.Strings;
import org.retropipes.dungeondiver7.locale.Untranslated;

public enum AttributeImageId implements DianeImageIndex {
	BOMBABLE, BOOM, BREAKABLE_BOTH, BREAKABLE_HORIZONTAL, BREAKABLE_VERTICAL, CLOAKED, CRACKED, CRUMBLING, DAMAGEABLE,
	DAMAGED, EXPLODING, FADING, FAKE, FLIP, INVISIBLE, KEY, LARGE_ALL, LARGE_ANY, LARGE_NUMBER_0, LARGE_NUMBER_1,
	LARGE_NUMBER_10, LARGE_NUMBER_11, LARGE_NUMBER_12, LARGE_NUMBER_13, LARGE_NUMBER_14, LARGE_NUMBER_15,
	LARGE_NUMBER_16, LARGE_NUMBER_17, LARGE_NUMBER_18, LARGE_NUMBER_19, LARGE_NUMBER_2, LARGE_NUMBER_3, LARGE_NUMBER_4,
	LARGE_NUMBER_5, LARGE_NUMBER_6, LARGE_NUMBER_7, LARGE_NUMBER_8, LARGE_NUMBER_9, LETTER_A, LETTER_B, LETTER_C,
	LETTER_D, LETTER_E, LETTER_F, LETTER_G, LETTER_H, LETTER_I, LETTER_J, LETTER_K, LETTER_L, LETTER_M, LETTER_N,
	LETTER_O, LETTER_P, LETTER_Q, LETTER_R, LETTER_S, LETTER_T, LETTER_U, LETTER_V, LETTER_W, LETTER_X, LETTER_Y,
	LETTER_Z, LOCK, MAGNET_ATTRACT, MAGNET_REPEL, MASTER, MIRROR, MIRROR_HORIZONTAL, MIRROR_NESW, MIRROR_NORTHEAST,
	MIRROR_NORTHWEST, MIRROR_NWSE, MIRROR_SOUTHEAST, MIRROR_SOUTHWEST, MIRROR_VERTICAL, MOVE, MULTIPLIER, NO,
	ONE_WAY_EAST, ONE_WAY_NORTH, ONE_WAY_SOUTH, ONE_WAY_WEST, POOF, PRESSURE, PULLABLE, PUSHABLE, QUESTION, ROTATING,
	ROTATING_CLOCKWISE, ROTATING_COUNTERCLOCKWISE, SIGN, SMALL_ALL, SMALL_ANY, SMALL_NUMBER_0, SMALL_NUMBER_1,
	SMALL_NUMBER_10, SMALL_NUMBER_11, SMALL_NUMBER_12, SMALL_NUMBER_13, SMALL_NUMBER_14, SMALL_NUMBER_15,
	SMALL_NUMBER_16, SMALL_NUMBER_17, SMALL_NUMBER_18, SMALL_NUMBER_19, SMALL_NUMBER_2, SMALL_NUMBER_3, SMALL_NUMBER_4,
	SMALL_NUMBER_5, SMALL_NUMBER_6, SMALL_NUMBER_7, SMALL_NUMBER_8, SMALL_NUMBER_9, SWITCH, SWITCHED, TRAP, WEAKENED,
	ZAP, _NONE;

	@Override
	public String getName() {
		return AttributeImageCatalogLoader.getFilename(this.ordinal());
	}

	@Override
	public URL getURL() {
		return this.getClass().getResource(Strings.untranslated(Untranslated.ATTRIBUTE_IMAGE_LOAD_PATH) + this.getName()
				+ Strings.fileExtension(FileExtension.IMAGE));
	}
}
